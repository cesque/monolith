import React from 'react'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import mainStyles from '../styles/home.module.scss'
import plainStyles from '../styles/plain/home.module.scss'

import { getDraftPosts, getPosts } from '../lib/posts'
import Header from '../components/Header'
import Footer from '../components/Footer'

import { DateTime } from 'luxon'

import { uploadOrFetchMetaImage } from '../lib/posts'
import config from '../lib/config'
import { getMetaData } from '../lib/meta'

export async function getStaticProps(context) {
    let metaImage = await uploadOrFetchMetaImage()

    let posts = await getPosts()

    if(!process.env.VERCEL) {
        posts.push(...await getDraftPosts())
    }

    let gameRecommendations = {
        published_at: '2021-06-24T22:58:19.965Z',
        uuid: '52a04d99-ec99-4a0f-a4c2-d170b34b5b2c',
        slug: 'game-recommendations',
    }

    posts.push(gameRecommendations)

    posts.sort((a, b) => {
        let aDate = DateTime.fromISO(a.published_at || a.created_at) || 0
        let bDate = DateTime.fromISO(b.published_at || a.created_at) || 0

        return bDate - aDate
    })

    return {
        props: {
            posts,
            metaImage,
            theme: process.env.theme ?? null,
        },
    }
}

export default class Home extends React.Component {    
    render() {
        let styles = this.props.theme == 'plain' ? plainStyles : mainStyles

        return (
            <div className={ styles.container }>
                <Head>
                    <title>monolith</title>
                    {/* <meta name="description" content="Generated by create next app" /> */}
                    <link rel="icon" href="/favicon.ico" />

                    { getMetaData('', 'blog', this.props.metaImage) }
                </Head>
    
                <Header theme={ this.props.theme } />
    
                <main className={ styles.main }>
                    <section className={ styles.list }>
                        { this.props.posts.map(post => {
                            let classes = [styles.postLink]
                            if(post.status == 'draft') classes.push(styles.postLinkDraft)

                            return <Link key={ post.uuid } href={ `/${post.slug}${ post.status == 'draft' ? '/draft' : '' }` }>
                                <a className={ classes.join(' ') }>{ post.slug }</a>
                            </Link>
                        })}
                    </section>
                </main>
    
                <Footer theme={ this.props.theme } />
            </div>
        )
    }
}
